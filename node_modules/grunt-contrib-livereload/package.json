{
  "name": "grunt-contrib-livereload",
  "description": "Reload assets live in the browser",
  "version": "0.1.1",
  "homepage": "https://github.com/gruntjs/grunt-contrib-livereload",
  "author": {
    "name": "Grunt Team",
    "url": "http://gruntjs.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/gruntjs/grunt-contrib-livereload.git"
  },
  "bugs": {
    "url": "https://github.com/gruntjs/grunt-contrib-livereload/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/gruntjs/grunt-contrib-livereload/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">=0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "tiny-lr": "~0.0.4"
  },
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-internal": "~0.4.2",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt-simple-mocha": "~0.3.2",
    "mocha": "~1.8.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "livereload",
    "reload",
    "refresh",
    "websockets"
  ],
  "contributors": [
    {
      "name": "Frederick Ros",
      "url": "https://github.com/sleeper"
    }
  ],
  "readme": "# grunt-contrib-livereload [![Build Status](https://secure.travis-ci.org/gruntjs/grunt-contrib-livereload.png?branch=master)](http://travis-ci.org/gruntjs/grunt-contrib-livereload)\n\n> Reload assets live in the browser\n\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-contrib-livereload --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-contrib-livereload');\n```\n\n\n\n\n## Livereload task\n_Run this task with the `grunt livereload` command._\n\ngrunt-contrib-livereload is composed of two tasks:\n\n* `livereload-start`: sets up a local server that will serve the needed js file and the wesocket that will control your browser\n* `livereload`: triggers the browser reload\n\nAdditionally a Connect middleware is available to inject a JS snippet into the page to that will connect the browser to the livereload server.\n\nThis task support multiple browsers, which means all the browsers listening on the livereload port will be reloaded at the same time.\n\nNote that grunt-contrib-livereload is designed to use [grunt-regarde](https://github.com/yeoman/grunt-regarde) instead grunt-contrib-watch (mainly due to shortcomings in the `watch` task which doesn't give access to changed files because it spawns tasks in subprocesses.)\n\n\n#### The livereload-start task\n\nThis task starts a server ([tiny-lr](https://github.com/mklabs/tiny-lr)) in the background, which will:\n* serve the `livereload.js`\n* act as a websocket server: each browser that opens a websocket to this server will be refreshed\n\nBy default the server listens on port 35729, but this can be changed through the `port` options.\n\n\n#### The livereload task\n\nThis task needs to be called to trigger a reload. It must be passed the list of files that have changed (i.e. `livereload:foo.txt:bar.txt`)\n\n\n#### The middleware\n\nA connect middleware (`livereloadSnippet`) is delivered as an helper (located in `grunt-contrib-livereload/lib/utils`). This middleware must be the first one inserted.\n\nIt will be inserted on the fly in your HTML and will connect back to the livereload server.\n\n```html\n<!-- livereload snippet -->\n<script>document.write('<script src=\\\"http://'\n+ (location.host || 'localhost').split(':')[0]\n+ ':\" + port + \"/livereload.js?snipver=1\\\"><\\\\/script>')\n</script>\n```\n\n### Options\n\n#### port\n\nType: `integer`\nDefault: `35729`\n\nThe port the livereload server should listen on.\n\n#### Example config\n\n```javascript\n'use strict';\nvar path = require('path');\nvar lrSnippet = require('grunt-contrib-livereload/lib/utils').livereloadSnippet;\n\nvar folderMount = function folderMount(connect, point) {\n  return connect.static(path.resolve(point));\n};\n\nmodule.exports = function (grunt) {\n  // Project configuration.\n  grunt.initConfig({\n    connect: {\n      livereload: {\n        options: {\n          port: 9001,\n          middleware: function(connect, options) {\n            return [lrSnippet, folderMount(connect, '.')]\n          }\n        }\n      }\n    },\n    // Configuration to be run (and then tested)\n    regarde: {\n      fred: {\n        files: '*.txt',\n        tasks: ['livereload']\n      }\n    }\n\n  });\n\n  grunt.loadNpmTasks('grunt-regarde');\n  grunt.loadNpmTasks('grunt-contrib-connect');\n  grunt.loadNpmTasks('grunt-contrib-livereload');\n\n  grunt.registerTask('default', ['livereload-start', 'connect', 'regarde']);\n};\n```\n\n\n## Release History\n\n * 2013-02-16   v0.1.1   Ensure Gruntfile.js is included on npm.\n * 2013-02-14   v0.1.0   First official release for Grunt 0.4.0.\n * 2013-02-02   v0.1.0rc8   Updated to work with latest grunt-regarde.\n * 2013-01-29   v0.1.0rc7   Initial release.\n\n---\n\nTask submitted by [Frederick Ros](https://github.com/sleeper)\n\n*This file was generated on Mon Feb 18 2013 08:58:12.*\n",
  "readmeFilename": "README.md",
  "_id": "grunt-contrib-livereload@0.1.1",
  "dist": {
    "shasum": "088104788c764bc992e6619bb33fa91e224d3ccf"
  },
  "_from": "grunt-contrib-livereload@0.1.1"
}
